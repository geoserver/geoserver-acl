openapi: 3.0.0
info:
  title: GeoServer ACL
  description: GeoServer Access Control List API
  version: 1.0.0
servers:
- url: /api
tags:
  - name: DataRules
    description: CRUD operations on GeoServer ACL Rules.
  - name: WorkspaceAdminRules
    description: CRUD operations on GeoServer ACL AdminRules.
  - name: Authorization
    description: Access Control List based authorization requests
security:
  - basicAuth: []
paths:
  /rules:
    get:
      operationId: getRules
      description: Returns an (optionally) paginated list of rules. See also the count operation.
      tags:
        - DataRules
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/nextCursor'
      responses:
        '200':
          $ref: '#/components/responses/PageOfRules'
    post:
      operationId: createRule
      tags:
        - DataRules
      parameters:
        - $ref: '#/components/parameters/insertPosition'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rule'
          application/x-jackson-smile:
            schema:
              $ref: '#/components/schemas/Rule'
      responses:
        '201':
          $ref: '#/components/responses/Rule'
        '400':
          description: Bad request body, for example providing a Rule with a non null id
        '409':
          description: A Rule with the same identifier already exists (i.e. with the same values for
              username, rolename, service, request, subfield, workspace, layer, and addressRange)
          headers:
           X-Reason:
             schema:
               type: string
               description: Error reason, including offending property names

  /rules/query:
    post:
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/nextCursor'
      operationId: queryRules
      tags:
        - DataRules
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleFilter'
          application/x-jackson-smile:
            schema:
              $ref: '#/components/schemas/RuleFilter'
      responses:
        '200':
          $ref: '#/components/responses/PageOfRules'
  /rules/query/count:
    get:
      operationId: countAllRules
      description: Returns the total number of rules
      tags:
        - DataRules
      responses:
        '200':
          $ref: '#/components/responses/Count'
    post:
      operationId: countRules
      description: Returns the number of rules that matches the search criteria
      tags:
        - DataRules
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleFilter'
          application/x-jackson-smile:
            schema:
              $ref: '#/components/schemas/RuleFilter'
      responses:
        '200':
          $ref: '#/components/responses/Count'
  /rules/query/one/priority/{priority}:
    get:
      operationId: findOneRuleByPriority
      description: Finds the Rule with the given priority
      tags:
        - DataRules
      parameters:
      - name: priority
        in: path
        required: true
        description: The rule priority to search for
        schema:
          type: integer
          format: int64
      responses:
        '200':
          $ref: '#/components/responses/Rule'
        '404':
          description: Not found
        '409':
          description: Conflict, there's more than one rule with the requested priority

  /rules/id/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      operationId: getRuleById
      description: Returns the Rule with the given identifier
      tags:
        - DataRules
      responses:
        '200':
          $ref: '#/components/responses/Rule'
        '404':
          description: Not found
    patch:
      operationId: updateRuleById
      tags:
        - DataRules
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rule'
          application/x-jackson-smile:
            schema:
              $ref: '#/components/schemas/Rule'
      responses:
        '200':
          $ref: '#/components/responses/Rule'
        '400':
          description: Bad request body
        '404':
          description: Not found
        '409':
          description: Conflict, tried to update the rule identifier properties to one that belongs to another rule
    delete:
      operationId: deleteRuleById
      tags:
        - DataRules
      responses:
        '200':
          description: OK
        '404':
          description: Not found
  /rules/id/{id}/exists:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      operationId: ruleExistsById
      description: Returns the Rule with the given identifier
      tags:
        - DataRules
      responses:
        '200':
          description: boolean indicating whether the rule with the provided identifier exists
          content:
            application/json:
              schema:
                type: boolean
            application/x-jackson-smile:
              schema:
                type: boolean

  /rules/id/{id}/layer-details:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      operationId: getLayerDetailsByRuleId
      description: Returns the LayerDetails for the Rule with the given identifier
      tags:
        - DataRules
      responses:
        '200':
          $ref: '#/components/responses/LayerDetails'
        '204':
          description: The rule has a layer set but does not have LayerDetails set
        '400':
          description: Bad request if the rule does not have a layer name set
        '404':
          description: Not found if the rule does not exist
    put:
      operationId: setRuleLayerDetails
      tags:
        - DataRules
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LayerDetails'
          application/x-jackson-smile:
            schema:
              $ref: '#/components/schemas/LayerDetails'
      responses:
        '204':
          description: Updated
        '404':
          description: Not found
  /rules/id/{id}/limits:
    parameters:
      - $ref: '#/components/parameters/id'
    put:
      operationId: setRuleLimits
      tags:
        - DataRules
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleLimits'
          application/x-jackson-smile:
            schema:
              $ref: '#/components/schemas/RuleLimits'
      responses:
        '204':
          description: Updated
        '400':
          description: Bad request, the rule is not of LIMIT type
        '404':
          description: Not found
  /rules/id/{id}/styles:
    parameters:
      - $ref: '#/components/parameters/id'
    put:
      operationId: setRuleAllowedStyles
      tags:
        - DataRules
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: array
              nullable: true
              uniqueItems: true
              items:
                type: string
          application/x-jackson-smile:
            schema:
              type: array
              nullable: true
              uniqueItems: true
              items:
                type: string
      responses:
        '204':
          description: Updated
        '404':
          description: Not found

  /rules/id/{id}/swapwith/{id2}:
    parameters:
      - $ref: '#/components/parameters/id'
      - name: id2
        in: path
        required: true
        description: The rule identifier to swap priorities with
        schema:
          type: string
    post:
      operationId: swapRules
      tags:
        - DataRules
      responses:
        '204':
          description: Updated
        '404':
          description: Not found
  /rules/shift:
    post:
      operationId: shiftRulesByPriority
      parameters:
        - name: priorityStart
          in: query
          required: true
          description: The minimum priority to start shifting at (inclusive)
          schema:
            type: integer
            format: int64
        - name: offset
          in: query
          required: true
          description: The priority offset to apply to all rules from priorityStart onwards
          schema:
            type: integer
            format: int64
            minimum: 1
      tags:
        - DataRules
      responses:
        '200':
          description: The number of rules whose priority was shifted by the required offset
          content:
            application/json:
              schema:
                type: integer
            application/x-jackson-smile:
              schema:
                type: integer
        '404':
          description: Not found
  /adminrules:
    get:
      operationId: findAllAdminRules
      description: Returns an (optionally) paginated list of admin rules.
      tags:
        - WorkspaceAdminRules
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/nextCursor'
      responses:
        '200':
          $ref: '#/components/responses/PageOfAdminRules'
    post:
      operationId: createAdminRule
      tags:
        - WorkspaceAdminRules
      parameters:
        - $ref: '#/components/parameters/insertPosition'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRule'
          application/x-jackson-smile:
            schema:
              $ref: '#/components/schemas/AdminRule'
      responses:
        '201':
          $ref: '#/components/responses/AdminRule'
  /adminrules/query:
    post:
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/nextCursor'
      operationId: findAdminRules
      tags:
        - WorkspaceAdminRules
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRuleFilter'
          application/x-jackson-smile:
            schema:
              $ref: '#/components/schemas/AdminRuleFilter'
      responses:
        '200':
          $ref: '#/components/responses/PageOfAdminRules'
  /adminrules/query/count:
    get:
      operationId: countAllAdminRules
      description: Returns the total number of rules
      tags:
        - WorkspaceAdminRules
      responses:
        '200':
          $ref: '#/components/responses/Count'
    post:
      operationId: countAdminRules
      description: Returns the number of rules that matches the search criteria
      tags:
        - WorkspaceAdminRules
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRuleFilter'
          application/x-jackson-smile:
            schema:
              $ref: '#/components/schemas/AdminRuleFilter'
      responses:
        '200':
          $ref: '#/components/responses/Count'
  /adminrules/query/one/priority/{priority}:
    get:
      operationId: findOneAdminRuleByPriority
      description: Finds the AdminRule with the given priority
      tags:
        - WorkspaceAdminRules
      parameters:
      - name: priority
        in: path
        required: true
        description: The rule priority to search for
        schema:
          type: integer
          format: int64
      responses:
        '200':
          $ref: '#/components/responses/AdminRule'
        '404':
          description: Not found
        '409':
          description: Conflict, there's more than one rule with the requested priority
  /adminrules/query/first:
    post:
      operationId: findFirstAdminRule
      description: Finds the first rule that satisfies the query criteria
      tags:
        - WorkspaceAdminRules
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRuleFilter'
          application/x-jackson-smile:
            schema:
              $ref: '#/components/schemas/AdminRuleFilter'
      responses:
        '200':
          $ref: '#/components/responses/AdminRule'
        '404':
          description: Not found

  /adminrules/id/{id}:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      operationId: getAdminRuleById
      description: Returns the AdminRule with the given identifier
      tags:
        - WorkspaceAdminRules
      responses:
        '200':
          $ref: '#/components/responses/AdminRule'
        '404':
          description: Not found
    patch:
      operationId: updateAdminRule
      tags:
        - WorkspaceAdminRules
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRule'
          application/x-jackson-smile:
            schema:
              $ref: '#/components/schemas/AdminRule'
      responses:
        '200':
          $ref: '#/components/responses/AdminRule'
        '400':
          description: Bad request body
        '404':
          description: Not found
        '409':
          description: Conflict, tried to update the rule identifier properties to one that belongs to another rule
    delete:
      operationId: deleteAdminRuleById
      tags:
        - WorkspaceAdminRules
      responses:
        '200':
          description: OK
        '404':
          description: Not found
  /adminrules/id/{id}/exists:
    parameters:
      - $ref: '#/components/parameters/id'
    get:
      operationId: adminRuleExistsById
      description: Returns whether the AdminRule with the given identifier exists
      tags:
        - WorkspaceAdminRules
      responses:
        '200':
          description: boolean indicating whether the admin rule with the provided identifier exists
          content:
            application/json:
              schema:
                type: boolean
            application/x-jackson-smile:
              schema:
                type: boolean

  /adminrules/id/{id}/swapwith/{id2}:
    parameters:
      - $ref: '#/components/parameters/id'
      - name: id2
        in: path
        required: true
        description: The admin rule identifier to swap priorities with
        schema:
          type: string
    post:
      operationId: swapAdminRules
      tags:
        - WorkspaceAdminRules
      responses:
        '204':
          description: Updated
        '404':
          description: Not found
  /adminrules/shift:
    post:
      operationId: shiftAdminRulesByPiority
      parameters:
        - name: priorityStart
          in: query
          required: true
          description: The minimum priority to start shifting at (inclusive)
          schema:
            type: integer
            format: int64
        - name: offset
          in: query
          required: true
          description: The priority offset to apply to all rules from priorityStart onwards
          schema:
            type: integer
            format: int64
            minimum: 1
      tags:
        - WorkspaceAdminRules
      responses:
        '200':
          description: The number of admin rules whose priority was shifted by the required offset
          content:
            application/json:
              schema:
                type: integer
        '404':
          description: Not found

  /authorization/admin:
    post:
      operationId: getAdminAuthorization
      description: Computes info about admin authorization on a given workspace.
                   Returned AccessInfo will always be ALLOW, with the computed adminRights. 
      tags:
        - Authorization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminAccessRequest'
          application/x-jackson-smile:
            schema:
              $ref: '#/components/schemas/AdminAccessRequest'
      responses:
        '200':
          $ref: '#/components/responses/AdminAccessInfo'
  /authorization/resources:
    post:
      operationId: getAccessInfo
      description: Computes the grant access info for the given request 
      tags:
        - Authorization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRequest'
          application/x-jackson-smile:
            schema:
              $ref: '#/components/schemas/AccessRequest'
      responses:
        '200':
          $ref: '#/components/responses/AccessInfo'
  /authorization/resources/matchingrules:
    post:
      operationId: getMatchingRules
      description: Obtains the plain list of matching rules that are applied to the given AccessRequest when computing the AccessInfo 
      tags:
        - Authorization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRequest'
          application/x-jackson-smile:
            schema:
              $ref: '#/components/schemas/AccessRequest'
      responses:
        '200':
          $ref: '#/components/responses/PageOfRules'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  parameters:
    id:
      name: id
      in: path
      required: true
      description: The rule identifier
      schema:
        type: string
    nextCursor:
      name: nextCursor
      in: query 
      description: The next cursor identifier when doing cursor paging, as returned by the X-ACL-NEXTCURSOR response header
      required: false
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: Maximum number of rules to return from the query. If there are more rules, the response will return an X-ACL-NEXTCURSOR header
                   with a value that can be used for the nextCursor parameter on a subsequent request, until X-ACL-NEXTCURSOR is null
      required: false
      schema:
        type: integer
    insertPosition:
      name: position
      in: query 
      description: "Displacement option related to how to interpret the Rule's priority"
      required: false
      schema:
        $ref: '#/components/schemas/InsertPosition'
  responses:
    Rule:
      description: The requested or updated Rule
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rule'
        application/x-jackson-smile:
          schema:
            $ref: '#/components/schemas/Rule'
    LayerDetails:
      description: The requested or updated Rule LayerDetails
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LayerDetails'
        application/x-jackson-smile:
          schema:
            $ref: '#/components/schemas/LayerDetails'
    AdminRule:
      description: The requested or updated AdminRule
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdminRule'
        application/x-jackson-smile:
          schema:
            $ref: '#/components/schemas/AdminRule'
    Count:
      description: Number of rules matching the request
      content:
        application/json:
          schema:
            type: integer
    PageOfRules:
      description: A page of rules, or an empty response if the requested page is off limits
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Rule'
        application/x-jackson-smile:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Rule'
      headers:
       X-ACL-NEXTCURSOR:
         schema:
           type: string
           description: Identifier used to fetch the next set of rules, usually in tandem with the
                        limit query parameter. Null or absent of there are no more rules to fetch
                        that satisfy the request filter.
    PageOfAdminRules:
      description: A page of admin rules, or an empty response if the requested page is off limits
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AdminRule'
        application/x-jackson-smile:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AdminRule'
      headers:
       X-ACL-NEXTCURSOR:
         schema:
           type: string
           description: Identifier used to fetch the next set of rules, usually in tandem with the
                        limit query parameter. Null or absent of there are no more rules to fetch
                        that satisfy the request filter.
    AccessInfo:
      description: The compiled access grant for a given resource access request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessInfo'
        application/x-jackson-smile:
          schema:
            $ref: '#/components/schemas/AccessInfo'
    AdminAccessInfo:
      description: The compiled admin access grant for a given workspace
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdminAccessInfo'
        application/x-jackson-smile:
          schema:
            $ref: '#/components/schemas/AdminAccessInfo'
  schemas:
    CatalogMode:
      type: string
      nullable: true
      enum:
        - HIDE
        - CHALLENGE
        - MIXED
    SpatialFilterType:
      type: string
      nullable: true
      enum:
        - INTERSECT
        - CLIP

    Geom:
      anyOf:
      - $ref: '#/components/schemas/wkt'
      - $ref: '#/components/schemas/wkb'

    wkt:
      type: object
      properties:
        wkt:
          type: string
          example: "SRID=4326;MULTIPOLYGON (((-180 -90, -180 90, 180 90, 180 -90, -180 -90)))"
    wkb:
      type: object
      properties:
        wkb:
          type: string
          format: byte

    AddressRange:
      type: string
      nullable: true
      pattern: '^([0-9]{1,3}\.){3}[0-9]{1,3}(\/([0-9]|[1-2][0-9]|3[0-2]))?$'
      description: IPv4 address with optional /nn on the end with values from 0 - 32
      
    Rule:
      type: object
      description: >-
         A Rule expresses if a given combination of request access is allowed or not.
      required:
        - priority
        - access
      properties:
        id:
          type: string
          nullable: true
        priority:
          type: integer
          format: int64
        extId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        access:
          $ref: '#/components/schemas/GrantType'
        limits:
          $ref: '#/components/schemas/RuleLimits'
        role:
          type: string
          nullable: true
        user:
          type: string
          nullable: true
        addressRange:
          $ref: '#/components/schemas/AddressRange'
        service:
          type: string
          nullable: true
        request:
          type: string
          nullable: true
        subfield:
          type: string
          nullable: true
        workspace:
          type: string
          nullable: true
        layer:
          type: string
          nullable: true
    RuleLimits:
      type: object
      description: Defines general limits (such as an Area ) for a Rule, when  access type is LIMIT
      nullable: true
      properties:
        allowedArea:
          $ref: '#/components/schemas/Geom'
        spatialFilterType:
          $ref: '#/components/schemas/SpatialFilterType'
        catalogMode:
          $ref: '#/components/schemas/CatalogMode'

    LayerDetails:
      type: object
      description: Details may be set only for ules with non-wildcarded profile, workspace, layer
      nullable: true
      properties:
        type:
          type: string
          nullable: true
          enum:
            - VECTOR
            - RASTER
            - LAYERGROUP
        defaultStyle:
          type: string
          nullable: true
        cqlFilterRead:
          type: string
          nullable: true
        cqlFilterWrite:
          type: string
          nullable: true
        allowedArea:
          $ref: '#/components/schemas/Geom'
        spatialFilterType:
          $ref: '#/components/schemas/SpatialFilterType'
        catalogMode:
          $ref: '#/components/schemas/CatalogMode'
        allowedStyles:
          type: array
          nullable: true
          uniqueItems: true
          items:
            type: string
        layerAttributes:
          type: array
          nullable: true
          uniqueItems: true
          items:
            $ref: '#/components/schemas/LayerAttribute'

    LayerAttribute:
      type: object
      description: Access restrictions to a FeatureType attribute
      required:
        - name
      properties:
        name:
          type: string
        dataType:
          type: string
          nullable: true
        access:
          type: string
          nullable: true
          enum:
            - NONE
            - READONLY
            - READWRITE
    InsertPosition:
      type: string
      enum:
        - FIXED
        - FROM_START
        - FROM_END

    GrantType:
      type: string
      description: The type of access restriction this rule represents.
      nullable: true
      enum:
        - ALLOW
        - DENY
        - LIMIT

    AdminGrantType:
      type: string
      description: The type of access restriction to the workspace administration
      nullable: true
      enum:
        - ADMIN
        - USER

    AdminRule:
      type: object
      description: >-
         An AdminRule expresses if a given combination of request access is allowed or not.
         It's used for setting admin privileges on workspaces.
      required:
        - priority
        - access
      properties:
        id:
          type: string
          nullable: true
        priority:
          type: integer
          format: int64
        access:
          $ref: '#/components/schemas/AdminGrantType'
        extId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
        user:
          type: string
          nullable: true
        workspace:
          type: string
          nullable: true
        addressRange:
          $ref: '#/components/schemas/AddressRange'

    TextFilter:
      type: object
      nullable: true
      properties:
        includeDefault:
          type: boolean
          nullable: true
        value:
          type: string
          nullable: true
          description: An absent value will match both set and default values for the property,
                        a value with only the character literal '*' will match only the default values for the property,
                        any other specific value will match properties with that value 

    SetFilter:
      type: object
      nullable: true
      properties:
        includeDefault:
          type: boolean
          nullable: true
        values:
          type: array
          nullable: true
          uniqueItems: true
          items:
            type: string

    AddressRangeFilter:
      type: object
      nullable: true
      properties:
        includeDefault:
          type: boolean
          nullable: true
        value:
          $ref: '#/components/schemas/AddressRange'

    RuleFilter:
      type: object
      description: A filter definition to query Rules
      nullable: true
      properties:
        user:
          $ref: '#/components/schemas/TextFilter'
        roles:
          $ref: '#/components/schemas/SetFilter'
        service:
          $ref: '#/components/schemas/TextFilter'
        request:
          $ref: '#/components/schemas/TextFilter'
        subfield:
          $ref: '#/components/schemas/TextFilter'
        workspace:
          $ref: '#/components/schemas/TextFilter'
        layer:
          $ref: '#/components/schemas/TextFilter'
        sourceAddress:
          $ref: '#/components/schemas/AddressRangeFilter'

    AdminRuleFilter:
      type: object
      description: A filter definition to query Rules
      nullable: true
      properties:
        grantType:
          $ref: '#/components/schemas/AdminGrantType'
        user:
          $ref: '#/components/schemas/TextFilter'
        roles:
          $ref: '#/components/schemas/SetFilter'
        workspace:
          $ref: '#/components/schemas/TextFilter'
        sourceAddress:
          $ref: '#/components/schemas/AddressRangeFilter'

    AccessRequest:
      type: object
      description: A request by a given authenticated user to access the resources matching the request properties
      properties:
        user:
          description: the authentication user name performing the request for which the authorization is being requested
          type: string
        roles:
          description: The roles the requesting user belongs to
          type: array
          nullable: true
          uniqueItems: true
          items:
            type: string
        sourceAddress:
          type: string
          default: '*'
        service:
          type: string
          default: '*'
        request:
          type: string
          default: '*'
        subfield:
          type: string
          default: '*'
        workspace:
          type: string
          default: '*'
        layer:
          type: string
          default: '*'
        
    AdminAccessRequest:
      type: object
      description: A request by a given authenticated user to access the workspace given by this request
      properties:
        user:
          description: the authentication user name performing the request for which the authorization is being requested
          type: string
        roles:
          description: The roles the requesting user belongs to
          type: array
          nullable: true
          uniqueItems: true
          items:
            type: string
        sourceAddress:
          type: string
          default: '*'
        workspace:
          type: string
          default: '*'

    AccessInfo:
      type: object
      description: The compiled access limits for a given user/RuleFilter combination
      required:
      - grant
      properties:
        grant:
          $ref: '#/components/schemas/GrantType'
        area:
          $ref: '#/components/schemas/Geom'
        clipArea:
          $ref: '#/components/schemas/Geom'
        catalogMode:
          $ref: '#/components/schemas/CatalogMode'
        defaultStyle:
          type: string
        allowedStyles:
          type: array
          uniqueItems: true
          items:
            type: string
        cqlFilterRead:
          type: string
        cqlFilterWrite:
          type: string
        attributes:
          type: array
          nullable: true
          uniqueItems: true
          items:
            $ref: '#/components/schemas/LayerAttribute'
        matchingRules:
          type: array
          items:
            type: string

    AdminAccessInfo:
      type: object
      description: Workspace level admin grant
      required:
      - admin
      properties:
        admin:
           type: boolean
        workspace:
          type: string
        matchingAdminRule:
          type: string
        