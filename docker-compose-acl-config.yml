jndi:
  datasources:
    acl:
      enabled: true
      wait-for-it: true
      wait-timeout: 15
      url: jdbc:postgresql://acldb:5432/acl
      username: acl
      password: acls3cr3t
      maximum-pool-size: 50
      minimum-idle: 2
      connection-timeout: 3000
      idle-timeout: 60000

acl.db.jndiName: java:comp/env/jdbc/acl

geoserver:
  acl:
    security:
      headers:
        enabled: true
        user-header: sec-username
        roles-header: sec-roles
        admin-roles: ["ROLE_ADMINISTRATOR"]
      internal:
        enabled: true
        users:
          admin:
            admin: true
            enabled: ${acl.admin.enabled:true}
            # password is a bcrypt encoded value for s3cr3t
            password: "${acl.admin.password:{bcrypt}$2a$10$FE62N3ejbKm56EX5VrtSQeDDka8YjwgjwF9sSEKbatGZuZ8e7S9v.}"
            #for a plain-text password (e.g. coming from a docker or kubernetes secret,
            # use the {noop} prefix, as in: password: "{noop}plaintextpwd}", or password: "{noop}${ACL_ADMIN_PASSWORD}"
          user:
            admin: false
            enabled: true
            # password is a bcrypt encoded value for s3cr3t
            password: "{bcrypt}$2a$10$eMyaZRLZBAZdor8nOX.qwuwOyWazXjR2hddGLCT6f6c382WiwdQGG"

logging:
  level:
    root: warn
    org.geoserver.acl: info
    org.geoserver.cloud.config: info
    org.springframework.jdbc.support: info

management:
  endpoint:
    health:
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include:
        - '*'
---
# local profile, used for development only. Other settings like config and eureka urls in gs_cloud_bootstrap_profiles.yml
spring.config.activate.on-profile: local
server.port: 9091
